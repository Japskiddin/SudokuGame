[versions]
agp = "8.12.2"
kotlin = "2.2.10"

android-tools = "31.12.2"

androidx-annotation = "1.9.1"
androidx-core-ktx = "1.17.0"
androidx-lifecycle = "2.9.3"
androidx-activity = "1.10.1"
androidx-compose-bom = "2025.08.01"
androidx-room = "2.7.2"
androidx-datastore = "1.1.7"
androidx-splashscreen = "1.0.1"

kotlinx-coroutines = "1.10.2"
kotlinx-immutable = "0.4.0"

ksp = "2.2.10-2.0.2"

dagger-hilt = "2.57.1"
dagger-hilt-navigation-compose = "1.2.0"
javax-inject = "1"

junit = "4.13.2"
google-truth = "1.4.4"

androidx-test-ext-junit = "1.3.0"
androidx-test-espresso-core = "3.7.0"
androidx-arch-core-testing = "2.2.0"

detekt = "1.23.8"
detekt-rules-compose = "0.4.27"

tracer = "1.1.3"

caupain = "1.5.1"

# Used directly in gradle plugins

androidSdk-min = "21"
androidSdk-compile = "36"
androidSdk-target = "36"

appVersion-name = "1.0.4"
appVersion-code = "10"

jvm = "21"

[libraries]
# region App
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core-ktx" }
androidx-activity = { module = "androidx.activity:activity", version.ref = "androidx-activity" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "androidx-splashscreen" }
# endregion

# region Compose
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "androidx-compose-bom" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation" }
androidx-compose-animation = { module = "androidx.compose.animation:animation" }
androidx-compose-ui = { module = "androidx.compose.ui:ui" }
androidx-compose-ui-unit = { module = "androidx.compose.ui:ui-unit" }
androidx-compose-ui-graphics = { module = "androidx.compose.ui:ui-graphics" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
androidx-compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4" }
androidx-compose-runtime = { module = "androidx.compose.runtime:runtime" }
# endregion

# region Kotlin
jetbrains-kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
jetbrains-kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
jetbrains-kotlinx-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinx-immutable" }
# endregion

# region Lifecycle
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidx-lifecycle" }
# endregion

# region Room
androidx-room-common = { module = "androidx.room:room-common", version.ref = "androidx-room" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidx-room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidx-room" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidx-room" }
# endregion

# region DataStore
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "androidx-datastore" }
# endregion

# region DI Hilt
dagger-hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "dagger-hilt" }
dagger-hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "dagger-hilt" }
dagger-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "dagger-hilt-navigation-compose" }
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javax-inject" }
# endregion

# region Testing
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-test-espresso-core" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext-junit" }
androidx-arch-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "androidx-arch-core-testing" }
jetbrains-kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
junit = { module = "junit:junit", version.ref = "junit" }
google-truth = { module = "com.google.truth:truth", version.ref = "google-truth" }
# endregion

# region Detekt
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detekt-rules-compose = { module = "io.nlopez.compose.rules:detekt", version.ref = "detekt-rules-compose" }
# endregion

# region Tracer
tracer = { module = "ru.ok.tracer:tracer-platform", version.ref = "tracer" }
tracer-crash-report = { module = "ru.ok.tracer:tracer-crash-report" }
tracer-crash-report-native = { module = "ru.ok.tracer:tracer-crash-report-native" }
tracer-heap-dumps = { module = "ru.ok.tracer:tracer-heap-dumps" }
# endregion

# region Project internal convention plugin
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
android-tools-common = { module = "com.android.tools:common", version.ref = "android-tools" }
compose-gradle-plugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradle-plugin = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
room-gradle-plugin = { module = "androidx.room:room-gradle-plugin", version.ref = "androidx-room" }
detekt-gradle-plugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
# endretion

[bundles]
compose = [
    "androidx-compose-foundation",
    "androidx-compose-animation",
    "androidx-compose-ui",
    "androidx-compose-ui-unit",
    "androidx-compose-ui-graphics",
    "androidx-compose-ui-tooling-preview",
    "androidx-compose-runtime",
]
tracer = [
    "tracer-crash-report",
    "tracer-crash-report-native",
    "tracer-heap-dumps"
]

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
android-test = { id = "com.android.test", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
google-devtools-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
dagger-hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "dagger-hilt" }
androidx-room = { id = "androidx.room", version.ref = "androidx-room" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
tracer = { id = "ru.ok.tracer", version.ref = "tracer" }
caupain = { id = "com.deezer.caupain", version.ref = "caupain" }

# region Project internal convention plugins
app-android-application = { id = "app.android.application", version = "unspecified" }
app-android-library = { id = "app.android.library", version = "unspecified" }
app-android-compose = { id = "app.android.compose", version = "unspecified" }
app-detekt = { id = "app.detekt", version = "unspecified" }
app-jvm = { id = "app.jvm", version = "unspecified" }
app-hilt = { id = "app.hilt", version = "unspecified" }
app-room = { id = "app.room", version = "unspecified" }
app-test = { id = "app.test", version = "unspecified" }
app-feature-ui = { id = "app.feature.ui", version = "unspecified" }
app-feature-ui-logic = { id = "app.feature.ui.logic", version = "unspecified" }
app-feature-domain = { id = "app.feature.domain", version = "unspecified" }
# endregion
